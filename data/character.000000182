{
  "name": "baker's wife",
  "plural": "baker's wives",
  "indefiniteArticle": "the",
  "description": "She's a strong and beautiful woman, even though she makes no attempt at being pretty. She's wearing simple worker's clothes that appear to have some white stains from flour.",
  "triggers": { "onbuy": "(function(buyer, boughtItem) {\n    if (this.sellableItems.isEmpty()) {\n        buyer.send(\"I'm sorry, I'm all sold out. Let me get new ones.\");\n        return;\n    }\n\n    if (boughtItem) {\n        this.removeSellableItem(boughtItem);\n\n        if (this.sellableItems.isEmpty()) {\n            this.setTimeout(function() {\n                this.say(\"Excuse me as I go fetch some new breads.\");\n            }, 4444);\n\n            this.invokeTrigger('onspawn');\n        }\n    } else {\n        buyer.send(\"What kind do you like? Make your choice:\");\n        buyer.sendSellableItemsList(this.sellableItems);\n    }\n})", "onspawn": "(function() {\n    var stallDescription = \"The stall looks plain and simple, made from a little car that makes the whole thing flexible enough to move it away after market hours.\";\n    var presentDescription = \"The baker's wife stands behind the stall, looking at you with a smile and inviting you to buy any of these nice smelling breads she has on display.\";\n    var absentDescription = \"The stall is currently deserted. Possibly, the baker's wife is gone fetching some more breads.\";\n\n    if (!this.sellableItems.isEmpty()) {\n        this.currentRoom.description = stallDescription + \"\\n\\n\" + presentDescription;\n        return;\n    }\n\n    var intervalId = this.setInterval(function() {\n        var exits = this.currentRoom.exits;\n        var out = exits.named('out');\n\n        if (this.inventory.isEmpty()) {\n            var square = exits.named('square');\n            var bakery = exits.named('bakery');\n\n            if (square) {\n                this.currentRoom.description = stallDescription + \"\\n\\n\" + absentDescription;\n                this.go(square);\n            } else if (bakery) {\n                this.go(bakery);\n            } else if (out) {\n                var bread1 = Realm.createObject('item');\n                bread1.name = 'dark bread';\n                bread1.cost = 1.0;\n                bread1.portable = true;\n                bread1.triggers = {\n                    'oneat': function(character) {\n                        character.addEffect({\n                            'delay': 2500,\n                            'numOccurrences': 1,\n                            'hpDelta': 3,\n                            'mpDelta': 0,\n                            'message': 'Eating some bread really did you good.'\n                        });\n                        character.send('You ate the dark bread.');\n                        character.stun(2500);\n                    }\n                };\n                var bread2 = bread1.copy();\n                var bread3 = Realm.createObject('item');\n                bread3.name = 'long bread';\n                bread3.cost = 1.5;\n                bread3.portable = true;\n                bread3.triggers = {\n                    'oneat': function(character) {\n                        character.addEffect({\n                            'delay': 3000,\n                            'numOccurrences': 1,\n                            'hpDelta': 5,\n                            'mpDelta': 0,\n                            'message': 'Eating some bread really did you good.'\n                        });\n                        character.send('You ate the long bread.');\n                        character.stun(3000);\n                    }\n                };\n                this.inventory = [ bread1, bread2, bread3 ];\n            } else {\n                this.go(exits.named('north'));\n            }\n        } else {\n            var breadStall = exits.named('bread stall');\n\n            if (out) {\n                this.go(out);\n            } else if (breadStall) {\n                this.go(breadStall);\n                this.sellableItems = this.inventory;\n                this.inventory = [];\n                this.clearInterval(intervalId);\n\n                this.currentRoom.description = stallDescription + \"\\n\\n\" + presentDescription;\n            } else {\n                this.go(exits.named('south'));\n            }\n        }\n    }, 5555);\n})" },
  "portable": false,
  "weight": 70,
  "cost": 0,
  "stats": [10, 10, 7, 10, 7, 7],
  "height": 170,
  "currentRoom": "room:85",
  "sellableItems": [ "item:1157", "item:1158" ],
  "race": "race:2",
  "characterClass": "class:147",
  "gender": "female",
  "respawnTime": 900000,
  "respawnTimeVariation": 900000,
  "hp": 14,
  "maxHp": 14,
  "mp": 7,
  "maxMp": 7,
  "gold": 0,
  "weapon": "0",
  "secondaryWeapon": "0",
  "shield": "0"
}